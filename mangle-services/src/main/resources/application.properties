#-------------------------------------------------------------------------------
#  Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.
#
#  This product is licensed to you under the Apache License, Version 2.0 (the "License").
#  You may not use this product except in compliance with the License.
#
#  This product may include a number of subcomponents with separate copyright notices
#  and license terms. Your use of these subcomponents is subject to the terms and
#  conditions of the subcomponent's license, as noted in the LICENSE file.
#-------------------------------------------------------------------------------
server.port.http=8080
server.port.https=8443
server.port=${server.port.https}
server.servlet.context-path=/mangle-services
server.tomcat.basedir=/home/mangle/var/opt/mangle-tomcat
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=%h %l %u %t "%r" %s %b (%D ms)
spring.mvc.servlet.load-on-startup=1
spring.jackson.default-property-inclusion=non_null
#Please change this at Mangle official release
app.release.cluster.version=4

#Hazelcast configuration
hazelcast.config.cluster.name=${clusterName:mangle}
hazelcast.config.public=${publicAddress:}
hazelcast.config.members=${clusterMembers:}
hazelcast.config.validationToken=${clusterValidationToken:}
hazelcast.config.deploymentMode=${deploymentMode:STANDALONE}
hazelcast.config.kubernetesMode=${kubernetesMode:false}
#Hazelcast Health Monitor Configuration
hazelcast.health.monitoring.threshold.memory.percentage=80
hazelcast.health.monitoring.threshold.cpu.percentage=80
hazelcast.health.monitoring.delay.seconds=60

# Log config
#Find the logging configuration in log4j2.xml
logging.path=${server.tomcat.basedir}/logs
logging.file=${logging.path}/mangle-server.log
# SSL config
security.require-ssl=true
server.ssl.key-store=${server.tomcat.basedir}/config/server.jks
server.ssl.key-store-password=vmware
server.ssl.keyStoreType=JKS
server.ssl.key-password=vmware
server.ssl.key-store-provider=SUN
server.ssl.keyAlias=server
# spring boot actuator config
management.metrics.use-global-registry=false
management.metrics.web.server.requests-metric-name=http.server.mangle.requests
management.metrics.web.client.requests-metric-name=http.client.mangle.requests
management.endpoints.web.base-path=/application/
management.endpoint.health.show-details=always
management.health.mongo.enabled=true
management.endpoint.shutdown.enabled=true
management.endpoint.restart.enabled = true
management.endpoints.web.exposure.include=health,info,mongo,shutdown,metrics,logfile,loggers,restart,refresh,prometheus
spring.main.allow-bean-definition-overriding=true
management.health.ldap.enabled=false
info.app.name=@project.name@
info.app.description=@project.description@
info.app.version=@project.version@
info.app.encoding=@project.build.sourceEncoding@
info.app.java.version=@java.version@
dirty.fix.enabled=true
# Enable multipart uploads
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=20KB
spring.servlet.multipart.max-file-size=250MB
spring.servlet.multipart.max-request-size=260MB
# Mangle Plugin config
mangle.plugin.upload-dir=${server.tomcat.basedir}/plugins
# Mode should be deployment or development
mangle.plugin.mode=deployment
# CASSANDRA DB config
spring.data.cassandra.cluster-name=${cassandraClusterName:manglecassandracluster}
spring.data.cassandra.keyspace-name=${cassandraKeyspaceName:mangledb}
spring.data.cassandra.contact-points=${cassandraContactPoints:localhost}
spring.data.cassandra.port=${cassandraPorts:9042}
spring.data.cassandra.schema-action=${cassandraSchemaAction:create_if_not_exists}
spring.data.cassandra.consistency-level=${cassandraConsistencyLevel:local-quorum}
spring.data.cassandra.serial-consistency-level=${cassandraSerialConsistencyLevel:local-serial}
spring.data.cassandra.ssl=${cassandraSslEnabled:false}
spring.data.cassandra.username=${cassandraUsername:}
spring.data.cassandra.password=${cassandraPassword:}
spring.data.cassandra.compression=lz4
spring.data.cassandra.datacenter-name=${cassandraDCName:DC1}
spring.data.cassandra.replicas=${cassandraNoOfReplicas:1}
# Connection timeout in ms
spring.data.cassandra.connect-timeout=12000
# Reconnect delay in ms
spring.data.cassandra.reconnect-delay=5000
# CASSANDRA keyspace config
spring.data.cassandra.mangle-keyspace=${cassandraCreateFIKeyspace:CREATE KEYSPACE IF NOT EXISTS ${spring.data.cassandra.keyspace-name} WITH replication = {'class': 'NetworkTopologyStrategy','${spring.data.cassandra.datacenter-name}': '${spring.data.cassandra.replicas}'} AND DURABLE_WRITES = true;}
spring.data.cassandra.alter-system-auth=${cassandraAlterSystemAuth:ALTER KEYSPACE "system_auth" WITH REPLICATION = {'class':'NetworkTopologyStrategy','${spring.data.cassandra.datacenter-name}': '${spring.data.cassandra.replicas}'};}
# CASSANDRA Pool config
spring.data.cassandra.pool.heartbeat-interval=30s
spring.data.cassandra.pool.idle-timeout=120s
spring.data.cassandra.pool.max-queue-size=256
spring.data.cassandra.pool.pool-timeout=5000ms
spring.data.cassandra.pool.min-connections-per-host=4
spring.data.cassandra.pool.max-connections-per-host=10
spring.data.cassandra.pool.max-requests-per-connection=1000
# CASSANDRA MIGRATION config
cassandra.migration.keyspace-name=${spring.data.cassandra.keyspace-name}
cassandra.migration.script-location=dbscripts/cassandra
cassandra.migration.strategy=fail_on_duplicates
cassandra.migration.consistency-level=local-quorum
# CASSANDRA Log config
logging.level.com.datastax.driver.core.QueryLogger.NORMAL= INFO
logging.level.com.datastax.driver.core.QueryLogger.SLOW= TRACE
logging.level.com.datastax.driver.core.Host= DEBUG
# MICROMETER Log config
logging.level.io.micrometer.wavefront.WavefrontMeterRegistry= TRACE
logging.level.io.micrometer.datadog.DatadogMeterRegistry= TRACE
logging.level.io.micrometer.datadog.DynatraceMeterRegistry= TRACE
logging.level.io.micrometer.prometheus.PrometheusMeterRegistry= TRACE

management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true